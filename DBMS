Q1:

WITH A AS (SELECT STATE, "2006", ROW_NUMBER() OVER (ORDER BY "2006" DESC) FROM ACCIDENTS), 
B AS (SELECT STATE, "2007", ROW_NUMBER() OVER (ORDER BY "2007" DESC) FROM ACCIDENTS),
C AS (SELECT STATE, "2008", ROW_NUMBER() OVER (ORDER BY "2008" DESC) FROM ACCIDENTS), 
D AS (SELECT STATE, "2009", ROW_NUMBER() OVER (ORDER BY "2009" DESC) FROM ACCIDENTS),
E AS (SELECT STATE, "2010", ROW_NUMBER() OVER (ORDER BY "2010" DESC) FROM ACCIDENTS),
F AS (SELECT STATE, "2011", ROW_NUMBER() OVER (ORDER BY "2011" DESC) FROM ACCIDENTS),
G AS (SELECT STATE, "2012", ROW_NUMBER() OVER (ORDER BY "2012" DESC) FROM ACCIDENTS),
H AS (SELECT STATE, "2013", ROW_NUMBER() OVER (ORDER BY "2013" DESC) FROM ACCIDENTS),
I AS (SELECT STATE, "2014", ROW_NUMBER() OVER (ORDER BY "2014" DESC) FROM ACCIDENTS),
J AS (SELECT STATE, "2015", ROW_NUMBER() OVER (ORDER BY "2015" DESC) FROM ACCIDENTS) 
	SELECT A.STATE as "2006", B.STATE as "2007", C.STATE as "2008", D.STATE as "2009", E.STATE as "2010", F.STATE as "2011", G.STATE as "2012", H.STATE as "2013", I.STATE as "2014", J.STATE as "2015" FROM A INNER JOIN B ON A.ROW_NUMBER = B.ROW_NUMBER INNER JOIN C ON A.ROW_NUMBER = C.ROW_NUMBER INNER JOIN D ON A.ROW_NUMBER = D.ROW_NUMBER INNER JOIN E ON A.ROW_NUMBER = E.ROW_NUMBER INNER JOIN F ON A.ROW_NUMBER = F.ROW_NUMBER INNER JOIN G ON A.ROW_NUMBER = G.ROW_NUMBER INNER JOIN H ON A.ROW_NUMBER = H.ROW_NUMBER INNER JOIN I ON A.ROW_NUMBER = I.ROW_NUMBER INNER JOIN J ON A.ROW_NUMBER = J.ROW_NUMBER LIMIT 3;


Q2:

4.SELECT id,item_name,price FROM itemsNew WHERE price>40000;
5.SELECT id,item_name,price FROM itemsNew WHERE (price>13000) AND (price<50000);
6.SELECT id,item_name,price FROM itemsNew WHERE price<12000;
7.
8.SELECT name FROM CustomersNew GROUP BY name HAVING (COUNT(name)>1);
9.SELECT item_name FROM ItemsNew ORDER BY price ASC LIMIT 5;
10.SELECT * FROM CustomersNew WHERE Name LIKE 'ra%' AND Name LIKE 'ph%';
11.SELECT NAME FROM CUSTOMERSNEW WHERE ADDRESS NOT LIKE 'Hyd';
12.SELECT COUNT(ITEM_NAME) FROM ITEMSNEW;
13.SELECT SUM(PRICE) FROM ITEMSNEW;
14.SELECT AVG(PRICE) FROM ITEMSNEW; or SELECT SUM(PRICE)/COUNT(ITEM_NAME) FROM ITEMSNEW;






SELECT Start_Date, MIN(End_Date)
FROM  (SELECT Start_Date FROM Projects WHERE Start_Date NOT IN (SELECT End_Date FROM Projects)) a, (SELECT end_date FROM PROJECTS WHERE end_date NOT IN (SELECT start_date FROM PROJECTS)) b
where start_date < end_date
GROUP BY start_date
ORDER BY (start_date - MIN(end_date)) DESC, start_date;